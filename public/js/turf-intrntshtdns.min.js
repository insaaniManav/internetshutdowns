(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var each=require("@turf/meta").coordEach;module.exports=function(r){var e=[1/0,1/0,-(1/0),-(1/0)];return each(r,function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])}),e};
},{"@turf/meta":5}],2:[function(require,module,exports){
var bbox=require("@turf/bbox"),point=require("@turf/helpers").point;module.exports=function(r){var e=bbox(r),o=(e[0]+e[2])/2,t=(e[1]+e[3])/2;return point([o,t])};
},{"@turf/bbox":1,"@turf/helpers":4}],3:[function(require,module,exports){
var each=require("@turf/meta").coordEach,point=require("@turf/helpers").point;module.exports=function(r){var e=0,t=0,o=0;return each(r,function(r){e+=r[0],t+=r[1],o++},!0),point([e/o,t/o])};
},{"@turf/helpers":4,"@turf/meta":5}],4:[function(require,module,exports){
function feature(e,r){return{type:"Feature",properties:r||{},geometry:e}}module.exports.feature=feature,module.exports.point=function(e,r){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return feature({type:"Point",coordinates:e.slice()},r)},module.exports.polygon=function(e,r){if(!e)throw new Error("No coordinates passed");for(var o=0;o<e.length;o++){var t=e[o];if(t.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<t[t.length-1].length;n++)if(t[t.length-1][n]!==t[0][n])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates:e},r)},module.exports.lineString=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"LineString",coordinates:e},r)},module.exports.featureCollection=function(e){return{type:"FeatureCollection",features:e}},module.exports.multiLineString=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiLineString",coordinates:e},r)},module.exports.multiPoint=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiPoint",coordinates:e},r)},module.exports.multiPolygon=function(e,r){if(!e)throw new Error("No coordinates passed");return feature({type:"MultiPolygon",coordinates:e},r)},module.exports.geometryCollection=function(e,r){return feature({type:"GeometryCollection",geometries:e},r)};var factors={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373};module.exports.radiansToDistance=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e*o},module.exports.distanceToRadians=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o},module.exports.distanceToDegrees=function(e,r){var o=factors[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o*57.2958};
},{}],5:[function(require,module,exports){
function coordEach(e,o,t){var r,n,c,l,u,p,i,a,f,s,h=0,d="FeatureCollection"===e.type,y="Feature"===e.type,g=d?e.features.length:1;for(r=0;r<g;r++)for(f=d?e.features[r].geometry:y?e.geometry:e,s="GeometryCollection"===f.type,i=s?f.geometries.length:1,l=0;l<i;l++)if(p=s?f.geometries[l]:f,a=p.coordinates,h=!t||"Polygon"!==p.type&&"MultiPolygon"!==p.type?0:1,"Point"===p.type)o(a);else if("LineString"===p.type||"MultiPoint"===p.type)for(n=0;n<a.length;n++)o(a[n]);else if("Polygon"===p.type||"MultiLineString"===p.type)for(n=0;n<a.length;n++)for(c=0;c<a[n].length-h;c++)o(a[n][c]);else if("MultiPolygon"===p.type)for(n=0;n<a.length;n++)for(c=0;c<a[n].length;c++)for(u=0;u<a[n][c].length-h;u++)o(a[n][c][u]);else{if("GeometryCollection"!==p.type)throw new Error("Unknown Geometry Type");for(n=0;n<p.geometries.length;n++)coordEach(p.geometries[n],o,t)}}function coordReduce(e,o,t,r){return coordEach(e,function(e){t=o(t,e)},r),t}function propEach(e,o){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length;t++)o(e.features[t].properties);break;case"Feature":o(e.properties)}}function propReduce(e,o,t){return propEach(e,function(e){t=o(t,e)}),t}function featureEach(e,o){if("Feature"===e.type)o(e);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length;t++)o(e.features[t])}function coordAll(e){var o=[];return coordEach(e,function(e){o.push(e)}),o}module.exports.coordEach=coordEach,module.exports.coordReduce=coordReduce,module.exports.propEach=propEach,module.exports.propReduce=propReduce,module.exports.featureEach=featureEach,module.exports.coordAll=coordAll;
},{}],6:[function(require,module,exports){
module.exports={bbox:require("@turf/bbox"),center:require("@turf/center"),centroid:require("@turf/centroid")};
},{"@turf/bbox":1,"@turf/center":2,"@turf/centroid":3}]},{},[6])(6)
});